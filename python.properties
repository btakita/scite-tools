# Define SciTE settings for Python files.

file.patterns.py=*.py;*.pyw
file.patterns.scons=SConstruct;SConscript

filter.python=Python (py pyw)|$(file.patterns.py)|

lexer.$(file.patterns.py)=python
lexer.$(file.patterns.scons)=python

keywordclass.python=and assert break class continue def del elif \
else except exec finally for from global if import in is lambda None \
not or pass print raise return try while yield

keywords.$(file.patterns.py)=$(keywordclass.python)
keywords.$(file.patterns.scons)=$(keywordclass.python)

statement.indent.*.py=10 :
statement.end.*.py=
statement.lookback.*.py=0
block.start.*.py=
block.end.*.py=

tab.timmy.whinge.level=1

#fold.quotes.python=1

comment.block.python=#~

# Python styles
# White space
style.python.0=
# Comment
style.python.1=$(colour.comment)
# Number
style.python.2=$(colour.number)
# String
style.python.3=$(colour.string)
# Single quoted string
style.python.4=$(colour.string)
# Keyword
style.python.5=$(colour.keyword)
# Triple quotes
style.python.6=$(colour.string)
# Triple double quotes
style.python.7=$(colour.string)
# Class name definition
style.python.8=$(colour.definition)
# Function or method name definition
style.python.9=$(colour.definition)
# Operators
style.python.10=$(colour.operator)
# Identifiers
style.python.11=
# Comment-blocks
style.python.12=$(colour.comment)
# End of line where string is not closed
style.python.13=$(colour.string),back:#262626,eolfilled
# Highlighted identifiers
style.python.14=$(colour.keyword)
# Decorators
style.python.15=
# Matched Operators
style.python.34=fore:#6699FF,bold
style.python.35=fore:#FF6699,bold
# Braces are only matched in operator style
braces.python.style=10

if PLAT_WIN
	command.go.*.py=pythonw -u "$(FileNameExt)" $(1) $(2) $(3) $(4)
	command.go.subsystem.*.py=1
	command.go.*.pyw=pythonw -u "$(FileNameExt)" $(1) $(2) $(3) $(4)
	command.go.subsystem.*.pyw=1
	command.build.SConscript=scons.bat --up .
	command.build.SConstruct=scons.bat .

if PLAT_GTK
	command.go.*.py=python -u $(FileNameExt) $(1) $(2) $(3) $(4)
	command.build.SConscript=scons --up .
	command.build.SConstruct=scons .

command.name.1.*.py=Syntax Check
command.1.*.py=python -c "import py_compile; py_compile.compile(r'$(FilePath)')"
